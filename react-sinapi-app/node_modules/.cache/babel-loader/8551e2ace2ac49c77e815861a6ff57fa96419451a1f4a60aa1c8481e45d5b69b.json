{"ast":null,"code":"const apiUrl='http://localhost:8000';// Certifique-se de que a porta corresponde à sua API FastAPI\nexport const fetchComposicoes=async()=>{try{const response=await fetch(\"\".concat(apiUrl,\"/composicoes\"));if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const data=await response.json();return data;}catch(error){console.error(\"Erro ao buscar composições:\",error);return{};// Retorna um objeto vazio em caso de erro\n}};","map":{"version":3,"names":["apiUrl","fetchComposicoes","response","fetch","concat","ok","Error","status","data","json","error","console"],"sources":["D:/Users/Guilherme/Downloads/c apagar/dias render/base de dados sinapi/sinapi_processor - fase 2/react-sinapi-app/src/api/composicoes.js"],"sourcesContent":["const apiUrl = 'http://localhost:8000'; // Certifique-se de que a porta corresponde à sua API FastAPI\n\nexport const fetchComposicoes = async () => {\n  try {\n    const response = await fetch(`${apiUrl}/composicoes`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Erro ao buscar composições:\", error);\n    return {}; // Retorna um objeto vazio em caso de erro\n  }\n};"],"mappings":"AAAA,KAAM,CAAAA,MAAM,CAAG,uBAAuB,CAAE;AAExC,MAAO,MAAM,CAAAC,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CAC1C,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,IAAAC,MAAA,CAAIJ,MAAM,gBAAc,CAAC,CACrD,GAAI,CAACE,QAAQ,CAACG,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,wBAAAF,MAAA,CAAwBF,QAAQ,CAACK,MAAM,CAAE,CAAC,CAC3D,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAN,QAAQ,CAACO,IAAI,CAAC,CAAC,CAClC,MAAO,CAAAD,IAAI,CACb,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnD,MAAO,CAAC,CAAC,CAAE;AACb,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}