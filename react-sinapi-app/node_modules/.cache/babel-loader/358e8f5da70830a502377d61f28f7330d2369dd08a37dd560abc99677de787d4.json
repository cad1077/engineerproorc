{"ast":null,"code":"const apiUrl = 'http://localhost:8000'; // Certifique-se de que a porta corresponde à sua API FastAPI\n\nexport const fetchComposicoes = async () => {\n  try {\n    const response = await fetch(`${apiUrl}/composicoes`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Erro ao buscar composições:\", error);\n    return {}; // Retorna um objeto vazio em caso de erro\n  }\n};","map":{"version":3,"names":["apiUrl","fetchComposicoes","response","fetch","ok","Error","status","data","json","error","console"],"sources":["D:/Users/Guilherme/Downloads/c apagar/dias render/base de dados sinapi/sinapi_processor - fase 2/react-sinapi-app/src/api/composicoes.js"],"sourcesContent":["const apiUrl = 'http://localhost:8000'; // Certifique-se de que a porta corresponde à sua API FastAPI\n\nexport const fetchComposicoes = async () => {\n  try {\n    const response = await fetch(`${apiUrl}/composicoes`);\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(\"Erro ao buscar composições:\", error);\n    return {}; // Retorna um objeto vazio em caso de erro\n  }\n};"],"mappings":"AAAA,MAAMA,MAAM,GAAG,uBAAuB,CAAC,CAAC;;AAExC,OAAO,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,MAAM,cAAc,CAAC;IACrD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;IAC3D;IACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACnD,OAAO,CAAC,CAAC,CAAC,CAAC;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}